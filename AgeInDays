#pragma warning(disable:4996)
#include <iostream>
using namespace std;

struct stDate
{
    short Day;
    short Month;
    short Year;
};
short ReadYear()
{
    short Year;
    cout << "Enter a year: ";
    cin >> Year;
    return Year;
}
short ReadMonth()
{
    short Month;
    do
    {
        cout << "Enter a month: ";
        cin >> Month;
    } while (Month < 1 || Month>12);
    return Month;
}
short ReadDay()
{
    short Day;
    do
    {
        cout << "Enter a Day: ";
        cin >> Day;
    } while (Day < 1 || Day>31);
    return Day;
}
stDate ReadDate()
{
    stDate Date;
    Date.Day = ReadDay();
    Date.Month = ReadMonth();
    Date.Year = ReadYear();
    return  Date;
}
bool IsLeapYear(short Year)
{
    return (Year % 400 == 0) || ((Year % 4 == 0) && (Year % 100 != 0));
}
short DaysInMonth(short Year, short Month)
{
    switch (Month)
    {
    case 1:case 3: case 5: case 7: case 8: case 10: case 12: return 31; break;
    case 2: return (IsLeapYear(Year)) ? 29 : 28; break;
    default:return 30;
    }
}
bool IsLastDayInMonth(stDate Date)
{
    return (Date.Day == DaysInMonth(Date.Year, Date.Month));
}
bool IsLastMonthInYear(short Month)
{
    return (Month == 12);
}
stDate IncreaseDateByOneDay(stDate Date)
{
    if (IsLastDayInMonth(Date))
    {
        Date.Day = 1;
        if (IsLastMonthInYear(Date.Month))
        {
            Date.Month = 1;
            Date.Year++;
        }
        else
        {
            Date.Month++;
        }
    }
    else
        Date.Day++;
    return Date;
}
stDate CurrentDate()
{
    time_t t = time(0);//get time now
    tm* now = localtime(&t);
    stDate Date;
    Date.Year = now->tm_year + 1900;
    Date.Month = now->tm_mon+1;
    Date.Day = now->tm_mday;
    return Date;
}
short NumberOfDaysSinceBegenningOfYear(stDate Date)
{
    short TotalDays = 0;
    for (short i = 1; i <= Date.Month - 1; i++)
    {
        TotalDays += DaysInMonth(Date.Year, i);
    }
    TotalDays += Date.Day;
    return TotalDays;
}
bool IsDate1Less(stDate Date1, stDate Date2)
{
    return  (Date1.Year < Date2.Year) ? true : ((Date1.Year == Date2.Year) ?
        (Date1.Month < Date2.Month ? true : (Date1.Month == Date2.Month ?
            Date1.Day < Date2.Day : false)) : false);
}
int GetDiffBetweenDates(stDate Date1, stDate Date2, bool IncludeEndDay = false)
{
    //date1 is less than (before) date2
    int Days = 0;
    while (IsDate1Less(Date1, Date2))
    {
        Days++;
        Date1 = IncreaseDateByOneDay(Date1);
    }
    return (IncludeEndDay ? ++Days : Days);
}
int main()
{
    cout << "Enter birth date:\n ";
    stDate Date1 = ReadDate();
    cout << endl;
    cout << "your age is " << GetDiffBetweenDates(Date1, CurrentDate(),true) << " days " << endl;

    return 0;
}